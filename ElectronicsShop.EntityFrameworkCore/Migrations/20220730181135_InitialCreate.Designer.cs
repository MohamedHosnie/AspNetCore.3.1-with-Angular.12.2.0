// <auto-generated />
using System;
using ElectronicsShop.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElectronicsShop.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(ElectronicsShopDbContext))]
    [Migration("20220730181135_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ElectronicsShop.Core.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Fulfilled")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ElectronicsShop.Core.Products.Category", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Name = "TVs"
                        },
                        new
                        {
                            Id = (short)2,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = (short)3,
                            Name = "Sound Systems"
                        });
                });

            modelBuilder.Entity("ElectronicsShop.Core.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<short>("CategoryId")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float?>("PriceOfTwo")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 1",
                            Price = 600f,
                            PriceOfTwo = 1100f
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 2",
                            Price = 1500f
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 3",
                            Price = 2200f,
                            PriceOfTwo = 4000f
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 4",
                            Price = 2400f,
                            PriceOfTwo = 4500f
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 5",
                            Price = 3800f,
                            PriceOfTwo = 6800f
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 6",
                            Price = 1100f,
                            PriceOfTwo = 2000f
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 7",
                            Price = 1700f,
                            PriceOfTwo = 3000f
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 8",
                            Price = 7200f
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 9",
                            Price = 500f,
                            PriceOfTwo = 800f
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 10",
                            Price = 660f,
                            PriceOfTwo = 1000f
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 11",
                            Price = 770f
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 12",
                            Price = 850f,
                            PriceOfTwo = 1600f
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 13",
                            Price = 750f
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 14",
                            Price = 940f,
                            PriceOfTwo = 1750f
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 15",
                            Price = 456f,
                            PriceOfTwo = 700f
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 16",
                            Price = 778f
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 17",
                            Price = 666f,
                            PriceOfTwo = 1111f
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 18",
                            Price = 999f,
                            PriceOfTwo = 1700f
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 19",
                            Price = 888f,
                            PriceOfTwo = 1500f
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 20",
                            Price = 254f
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 21",
                            Price = 256f,
                            PriceOfTwo = 512f
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = (short)1,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 22",
                            Price = 512f
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = (short)2,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 23",
                            Price = 128f,
                            PriceOfTwo = 256f
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = (short)3,
                            Description = "This is a test dummy data description",
                            Name = "Test Product 24",
                            Price = 1024f,
                            PriceOfTwo = 2048f
                        });
                });

            modelBuilder.Entity("ElectronicsShop.Core.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("FullAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2022, 7, 30, 20, 11, 34, 984, DateTimeKind.Local).AddTicks(837),
                            Email = "sample@email.com",
                            FullAddress = "Cairo, Egypt",
                            FullName = "Electronics Shop Admin",
                            PasswordHash = "$2a$11$UBds5HSkR4cEPlGDo8lUyOCNOBmen37At0FJA8/kIgNdjUdMBxHUu",
                            PhoneNumber = "011111",
                            Role = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("ElectronicsShop.Core.Orders.Order", b =>
                {
                    b.HasOne("ElectronicsShop.Core.Products.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicsShop.Core.Users.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ElectronicsShop.Core.Products.Product", b =>
                {
                    b.HasOne("ElectronicsShop.Core.Products.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ElectronicsShop.Core.Products.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ElectronicsShop.Core.Products.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ElectronicsShop.Core.Users.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
